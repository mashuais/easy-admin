{"version":3,"file":"js/676.38d69ead.js","mappings":"8JAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,UAAU,CAACE,YAAY,YAAY,CAACF,EAAG,MAAM,CAACE,YAAY,WAAWC,MAAM,CAAC,KAAO,UAAUC,KAAK,UAAU,CAACJ,EAAG,OAAO,CAACF,EAAIO,GAAG,YAAYL,EAAG,MAAM,CAAGD,KAAKO,OAA2GN,EAAG,MAAM,CAACE,YAAY,UAAUC,MAAM,CAAC,IAAMJ,KAAKO,OAAO,IAAM,MAAlKN,EAAG,MAAM,CAACE,YAAY,UAAUC,MAAM,CAAC,IAAMI,EAAQ,MAAkC,IAAM,MAA2EP,EAAG,MAAM,CAACE,YAAY,WAAW,CAACF,EAAG,QAAQ,CAACQ,IAAI,SAASC,YAAY,CAAC,QAAU,QAAQN,MAAM,CAAC,KAAO,OAAO,OAAS,WAAWO,GAAG,CAAC,OAASZ,EAAIa,gBAAgBX,EAAG,YAAY,CAACG,MAAM,CAAC,KAAO,UAAU,KAAO,gBAAgBO,GAAG,CAAC,MAAQZ,EAAIc,YAAY,CAACd,EAAIO,GAAG,UAAUL,EAAG,YAAY,CAACG,MAAM,CAAC,KAAO,UAAU,KAAO,iBAAiB,SAA0B,KAAfL,EAAIQ,SAAgB,CAACR,EAAIO,GAAG,WAAW,MACrxB,EACIQ,EAAkB,G,UCoBtB,GACAC,KAAA,aACAC,OACA,OACAT,OAAA,GAEA,EACAU,QAAA,CAEAJ,YAEA,KAAAK,MAAAC,OAAAC,OACA,EAEAR,aAAAS,GAEA,MAAAC,EAAAD,EAAAE,OAAAD,MACA,OAAAA,EAAAE,OAEA,KAAAjB,OAAA,OACA,CAGA,MAAAkB,EAAA,IAAAC,WAEAD,EAAAE,cAAAL,EAAA,IAEAG,EAAAG,OAAA,UAEA,KAAArB,OAAAc,EAAAE,OAAAM,OAEA,MAAAC,QAAAC,EAAAA,EAAAA,IAAA,KAAAxB,QACA,OAAAuB,EAAAE,KAAA,YAAAC,SAAAC,MAAA,WACA,KAAAD,SAAAE,QAAA,WACA,KAAAC,OAAAC,SAAA,gBAKA,CACA,IC9DmQ,I,UCQ/PC,GAAY,OACd,EACAxC,EACAgB,GACA,EACA,KACA,WACA,MAIF,EAAewB,EAAiB,O","sources":["webpack://vue-event/./src/views/user/userAvatar.vue","webpack://vue-event/src/views/user/userAvatar.vue","webpack://vue-event/./src/views/user/userAvatar.vue?2ec6","webpack://vue-event/./src/views/user/userAvatar.vue?13d8"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('el-card',{staticClass:\"box-card\"},[_c('div',{staticClass:\"clearfix\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('span',[_vm._v(\"更换头像\")])]),_c('div',[(!this.avatar)?_c('img',{staticClass:\"the_img\",attrs:{\"src\":require(\"../../assets/images/avatar.jpg\"),\"alt\":\"\"}}):_c('img',{staticClass:\"the_img\",attrs:{\"src\":this.avatar,\"alt\":\"\"}}),_c('div',{staticClass:\"btn-box\"},[_c('input',{ref:\"iptRef\",staticStyle:{\"display\":\"none\"},attrs:{\"type\":\"file\",\"accept\":\"image/*\"},on:{\"change\":_vm.onFileChange}}),_c('el-button',{attrs:{\"type\":\"primary\",\"icon\":\"el-icon-plus\"},on:{\"click\":_vm.chooseImg}},[_vm._v(\"选择图片\")]),_c('el-button',{attrs:{\"type\":\"success\",\"icon\":\"el-icon-upload\",\"disabled\":_vm.avatar === ''}},[_vm._v(\"上传头像\")])],1)])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <el-card class=\"box-card\">\n    <div slot=\"header\" class=\"clearfix\">\n      <span>更换头像</span>\n    </div>\n    <div>\n      <!-- 图片，用来展示用户选择的头像 -->\n      <img class=\"the_img\" v-if=\"!this.avatar\" src=\"../../assets/images/avatar.jpg\" alt=\"\" />\n      <img class=\"the_img\" v-else :src=\"this.avatar\" alt=\"\">\n\n      <!-- 按钮区域 -->\n      <div class=\"btn-box\">\n        <input type=\"file\" accept=\"image/*\" style=\"display: none\" ref=\"iptRef\" @change=\"onFileChange\" />\n        <el-button type=\"primary\" icon=\"el-icon-plus\" @click=\"chooseImg\">选择图片</el-button>\n        <el-button type=\"success\" icon=\"el-icon-upload\" :disabled=\"avatar === ''\">上传头像</el-button>\n      </div>\n    </div>\n  </el-card>\n</template>\n\n<script>\nimport { updateAvatarAPI } from '@/api'\nexport default {\n  name: 'UserAvatar',\n  data () {\n    return {\n      avatar: ''\n    }\n  },\n  methods: {\n    // 选择图片->点击事件->让选择框出现\n    chooseImg () {\n      // 模拟点击行为\n      this.$refs.iptRef.click()\n    },\n    // 在选择框中选择图片后触发的改变事件\n    onFileChange (e) {\n      // 获取用户选择的文件列表（伪数组）\n      const files = e.target.files\n      if (files.length === 0) {\n        // 没有选择图片\n        this.avatar = ''\n      } else {\n        // 选择了图片\n        // 1. 创建 FileReader 对象\n        const fr = new FileReader()\n        // 2. 调用 readAsDataURL 函数，读取文件内容\n        fr.readAsDataURL(files[0])\n        // 3. 监听 fr 的 onload 事件\n        fr.onload = async e => {\n          // 4. 通过 e.target.result 获取到读取的结果，值是字符串（base64 格式的字符串）\n          this.avatar = e.target.result\n          // 5. 调用接口, 传递给后台并根据返回结果给用户提示\n          const res = await updateAvatarAPI(this.avatar)\n          if (res.code !== 0) return this.$message.error('上传头像失败！')\n          this.$message.success('上传头像成功！')\n          this.$store.dispatch('initUserInfo')\n        }\n\n        // 使用URL.createObjURL()来转换文件变成图片地址(纯前端本地)\n        // this.avatar = URL.createObjectURL(files[0])\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.btn-box {\n  margin-top: 10px;\n}\n.preview {\n  object-fit: cover;\n}\n.the_img{\n    width: 350px;\n    height: 350px;\n}\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./userAvatar.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./userAvatar.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./userAvatar.vue?vue&type=template&id=72dab9b2&scoped=true&\"\nimport script from \"./userAvatar.vue?vue&type=script&lang=js&\"\nexport * from \"./userAvatar.vue?vue&type=script&lang=js&\"\nimport style0 from \"./userAvatar.vue?vue&type=style&index=0&id=72dab9b2&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"72dab9b2\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","attrs","slot","_v","avatar","require","ref","staticStyle","on","onFileChange","chooseImg","staticRenderFns","name","data","methods","$refs","iptRef","click","e","files","target","length","fr","FileReader","readAsDataURL","onload","result","res","updateAvatarAPI","code","$message","error","success","$store","dispatch","component"],"sourceRoot":""}